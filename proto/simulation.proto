syntax = "proto3";

package simulatorproto;

import "proto/encounter_config.proto";
import "proto/player_config.proto";
import "proto/policy.proto";

message Distribution {
  int32 n = 1;
  double mean = 2;
  double stddev = 3;
}

message SimulationConfig {
  // Hard minimum number of iterations to perform.
  // Reasonable default: 100
  int32 min_iterations = 1;

  // Approximate maximum number of iterations to perform.
  // Not a hard max, because threads are allowed to race a bit.
  // Reasonable default: 10,000
  int32 max_iterations = 2;

  // We'll halt a simulation early if the error drops below this threshold.
  // Reasonable default: 0.01
  double target_error = 3;

  // `encounter_config` contains all parameters pertaining to the fight script.
  // This proto also holds duration information (how long the fight is).
  EncounterConfig encounter_config = 4;

  // `player_config` contains the gearset we're evaluating our policy on, as
  // well as our current talent setup.
  PlayerConfig player_config = 5;

  // `policy` represents the current policy we want our simulator to evaluate.
  // The policy might come in as a deterministic APL or a deep learning model.
  Policy policy = 6;
}

message SimulationResult {
  Distribution dps_distribution = 1;
  string metadata = 2;
}
