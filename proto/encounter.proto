syntax = "proto3";

import "actor.proto";

// A protobuf for representing the "script" of the simulation's enemies.
// We specify that an encounter is a list of "EncounterEvent" messages, where a
// encounter event represents something interesting happening in the encounter,
// like a boss spawning in, or a double damage phase, or a movement phase, or an
// add wave, or something. Right now, we just support some basics.
// TODO(mrdmnd): make the timing on these probabilistic so we don't overfit?
//
// https://github.com/simulationcraft/simc/blob/legion-dev/engine/sim/sc_raid_event.cpp

message EncounterConfig {
  int32 id = 1;
  string name = 2; // Something like "Patchwork" or "Helter Skelter"
  repeated EncounterEvent events = 3;
}

message EncounterEvent {
  int32 timestamp = 1;
  oneof event {
    ActorSpawnEvent spawn = 2;
    ActorInvulnEvent invuln = 3;
    MovementEvent movement = 4;
    StunEvent stun = 5;
    TakeDamageEvent damage = 6;
  }
}

message ActorSpawnEvent {
  Actor actor = 1;
  int32 despawn_timestamp = 2; // If -1, actor despawns when HP is zero.
}

message ActorInvulnEvent {
  Actor actor = 1;
  int32 duration = 2; // Number of timesteps that this actor is invulnerable.
}

// Logically, this is just a constraint meant to keep you casting only instants.
message MovementEvent {
  int32 duration = 1; // Number of timesteps that we are forced to move for.
}

// Logically, this is just a constraint meant to keep you from casting anything.
message StunEvent {
  int32 duration = 1; // Number of timesteps that we are unable to act for.
}

message TakeDamageEvent {
  int32 damage_amount = 1; // Amount of damage the boss deals to us.
}
